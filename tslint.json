{
  "extends": [
    "tslint-eslint-rules",
    "tslint-config-airbnb",
    "tslint:latest"
  ],
  "compilerOptions": {
    "lib": [
      "ES2017"
    ] //diables warning about async functions requiring promise constructor
  },
  "rules": {
    "no-implicit-dependencies": false,
    "import-name": false,
    "align": [
      true,
      "members",
      "parameters",
      "statements"
    ],
    "no-constant-condition": true,
    //from .eslintrc - would be nice if I could include these dynamically
    "interface-name": false,
    "indent": [
      true,
      "spaces",
      2
    ],
    "max-line-length": [
      "warn",
      150
    ],
    "no-unused-variable": true,
    "no-namespace": false,
    "member-access": [
      false
    ],
    "linebreak-style": false,
    "jsx-quotes": false,
    "quotemark": [
      "warn",
      "single",
      "avoid-escape",
      "avoid-template"
    ],
    "no-use-before-define": false,
    "padded-blocks": false,
    "no-param-reassign": false, // could make this warn but seems like we do it a lot for code readability
    "semicolon": [
      "warn",
      "never"
    ], // code is more readable without semicolons
    "comma-dangle": "warn", // would be better if on but it breaks grunt
    "comment-format": "warn",
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "arrow-parens": false, // our code would be more consistent if parens were always required
    "import/no-extraneous-dependencies": "warn",
    "import/first": "warn",
    "ordered-imports": [
      true,
      {
        "grouped-imports": true,
        "import-sources-order": "any",
        "named-imports-order": "any",
        "module-source-path": "root"
      }
    ],
    "no-var-requires": false,
    "no-string-literal": false,
    "object-literal-sort-keys": false,
    "object-literal-key-quotes": false,
    "no-submodule-imports": false,
    "spaced-comment": false, // I"d rather leave this on but intellij can"t put spaces in automatically
    "no-unneeded-ternary": "warn",
    "arrow-body-style": [
      "warn",
      "as-needed"
    ],
    "no-trailing-spaces": "warn",
    "curly": false,
    "no-console": [
      "log"
    ],
    "no-magic-numbers": false,
    "newline-before-return": false,
    "valid-jsdoc": false,
    "no-bitwise": false,
    "ter-arrow-parens": false,
    "array-type": [
      true,
      "array"
    ],
    "max-classes-per-file": false,
    // React / tsx
    "jsx-wrap-multiline": true,
    "jsx-self-close": true,
    "jsx-curly-spacing": true,
    "jsx-alignment": true,
    "jsx-boolean-value": false,
    "jsx-no-multiline-js": false,
    "jsx-no-lambda": false,
    "trailing-comma": "warn",
    "space-before-function-paren": false,
    "ter-indent": false,
    "variable-name": [
      "allow-leading-underscore"
    ]
  }
}